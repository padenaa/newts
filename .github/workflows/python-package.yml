  # This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  POSTGRES_PASSWORD: password
  DATABASE_URL: postgres://postgres:password@127.0.0.1:5332/newts?sslmode=disable

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Create database
      run: |
        cd backend
        docker-compose up -d
    - name: Initialize database
      uses: 'Homebrew/actions/setup-homebrew@master'
    - name: Run dbmate initialization
      run: |
        brew install dbmate
        cd backend
        dbmate --wait --no-dump-schema -u $DATABASE_URL up
    - name: Test with pytest
      run: |
        pytest
